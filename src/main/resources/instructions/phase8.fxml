<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.image.Image?>
<?import javafx.scene.image.ImageView?>
<?import javafx.scene.layout.Pane?>
<?import javafx.scene.text.Font?>
<?import javafx.scene.text.Text?>

<Pane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="343.0" prefWidth="736.0" xmlns="http://javafx.com/javafx/8.0.111" xmlns:fx="http://javafx.com/fxml/1">
	<children>
		<ImageView fitHeight="195.0" fitWidth="193.0" layoutX="494.0" layoutY="49.0" pickOnBounds="true" preserveRatio="true">
			<image>
				<Image url="@../img/7-etap.png" />
			</image>
		</ImageView>
		<Text layoutX="14.0" layoutY="30.0" strokeType="OUTSIDE" strokeWidth="0.0" text="Даний етап є завершальним етапом складання кубика Рубіка. На  даному етапі використовується найпростіша формула для збірки куба, в порівнянні з усіма іншими етапами." wrappingWidth="455.982421875">
			<font>
				<Font size="14.0" />
			</font></Text>
		<Text layoutX="14.0" layoutY="99.0" strokeType="OUTSIDE" strokeWidth="0.0" text="Дії цього етапу полягають в тому, щоб зафіксувати перед собою бічну сторону правий кут якої ще не розгорнутий, після наших дій, ця сторона буде залишатися фронтальної до кінця складання. Як тільки сторона знайдена, починаємо розворот кута наступною формулою П’Н’ · ПН повторюємо її до тих пір, поки кут не встане на своє місце. Після цього, розгортаємо верх, за годинниковою або проти годинникової стрілки, це не має значення, до тих пір, поки ще один не зібраний кут не встане на це ж місце. І повторюємо нашу формулу П’Н’ · ПН, до тих пір, доки і цей кут не розташується правильно. Під час виконання даного етапу кубик буде «розвалюватися», але, коли ви зберете останній кут, все стане на свої місця, можливо за винятком того, що вам треба буде розгорнути нижній і верхній шар, що б вони збігалися з центральним." wrappingWidth="455.9824094772339">
			<font>
				<Font size="14.0" />
			</font></Text>
	</children>
</Pane>
